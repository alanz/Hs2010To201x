# NB: don't set `language: haskell` here

sudo: false # Use new caching docker based infrastructure

cache: apt
cache:
  directories:
  # - $HOME/.stack
  - $HOME/.ghc
  - $HOME/.cabal
  - $HOME/.ghc-mod
  # - /opt

# See also https://github.com/hvr/multi-ghc-travis for more information
env:
 - CABALVER=1.22 GHCVER=7.10.2
 # - CABALVER=1.22 GHCVER=head   # see section about GHC HEAD snapshots

addons:
  apt:
    sources:
    - hvr-ghc
    packages:
    - libgmp-dev
    - cabal-install-1.22
    - happy-1.19.4
    - alex-3.1.3
    - ghc-7.10.2

# matrix:
#   allow_failures:
#    - env: CABALVER=1.22 GHCVER=head

# Note: the distinction between `before_install` and `install` is not important.
before_install:
 - export PATH=/opt/alex/3.1.3/bin:/opt/happy/1.19.4/bin:$PATH
 - export PATH=/opt/ghc/$GHCVER/bin:/opt/cabal/$CABALVER/bin:$PATH

install:
 - cabal --version
 - echo "$(ghc --version) [$(ghc --print-project-git-commit-id 2> /dev/null || echo '?')]"
 - travis_retry cabal update
 - pwd
 # Compiling HaRe with optimisation results in OOM error on travis
 - cabal install --disable-optimisation HaRe
 - cabal install --dependencies-only --enable-tests

# Here starts the actual work to be performed for the package under
# test; any command which exits with a non-zero exit code causes the
# build to fail.
script:
 - if [ -f configure.ac ]; then autoreconf -i; fi
 # GHC 7.10.2 times out on compilation if optimisation is not disabled
 - cabal configure --disable-optimization --enable-tests --enable-benchmarks -v2  # -v2 provides useful information for debugging
 - cabal build   # this builds all libraries and executables (including tests/benchmarks)
 - cabal haddock
 - cabal test --show-details=streaming
 - cabal check
 - cabal sdist   # tests that a source-distribution can be generated
 - emacs --version
 - emacs -Q --batch -L elisp -l elisp/tests/hare-tests.el -f ert-run-tests-batch-and-exit

# The following scriptlet checks that the resulting source distribution can be built & installed
 # - export SRC_TGZ=$(cabal info . | awk '{print $2 ".tar.gz";exit}') ;
 #   cd dist/;
 #   if [ -f "$SRC_TGZ" ]; then
 #      cabal install --force-reinstalls "$SRC_TGZ";
 #   else
 #      echo "expected '$SRC_TGZ' not found";
 #      exit 1;


notifications:
  irc: "irc.freenode.org#haskell-refactorer"

